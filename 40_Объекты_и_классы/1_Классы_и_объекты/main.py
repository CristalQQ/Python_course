# Классы - это шаблоны для объектов.
# На основании шаблонов создаются экземпляры объектов, экземпляров может быть многою
# Экземпляры могут иметь собственные атрибуты, значение этих атрибутов можно изменять независимо от других экземпляров. Потому что они принадлежат к конкретному экземпляру того или иного класса
# Экзмепляры наследуют атрибуты классов. Если на уровене класса определены методы, то методы могут наследоваться всеми экземплярами класса.
# В python класс object - кореневой, и от него унаследуются атрибуты для подклассовых классов

# Классы создаются используя ключевое слово class
# Классы начинаются с большой буквы и пишутся слитно
# В теле класса описывает методы класса, методы добавляются как обычные функции

# Создание класса:
class Car:
    def move(self):  # self - это указание на определенный экземпляр класса Car
        print("Car is moving")

    def stop(self):
        print("Car is stopped")


# Создание экземпляра класса
my_car = Car()


# Проверка принадлежности классу
print(type(my_car))  # <class '__main__.Car'>
print(type(my_car) == Car)  # True
print(isinstance(my_car, Car))  # True
print(isinstance(my_car, object))  # True


# Вызов методов
my_car.move()   # Car is moving
my_car.stop()   # Car is stopped

# При вызове метода python автоматически передает ему объект для которого мы этот метод вызываем.
# Вызываем метод move() для объекта my_car, в вызове метода, объект my_car автоматически передается первым аргументом.
# Значение параметра self будет объект my_car
